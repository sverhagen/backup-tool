#!/bin/bash

# function that prints exit message and exits script with status 1
die()
{
	echo "failed to do backup: $@"
	exit 1
}

# STAGING_FOLDER_IDEMPOTENT=set

prepareStagingFolder()
{
	echo "preparing staging folder: $(stagingFolder)"
	[ -z $STAGING_FOLDER_IDEMPOTENT ] && [ -e $(stagingFolder) ] && die "staging folder already exists: $(stagingFolder)"
	mkdir --parents $(stagingFolder)
}

stagingFolder()
{
	echo "/tmp/backuptool_staging"
}

listStagingFolder()
{
	echo "contents of staging folder:"
	ls -lh $(stagingFolder) | sed 's/^/\t/'
}

removeStagingFolder()
{
	listStagingFolder

	if [ -z $STAGING_FOLDER_IDEMPOTENT ]
	then
		echo "removing staging folder: $(stagingFolder)"
		[ ! -e $(stagingFolder) ] && die "staging folder does not exist: $(stagingFolder)"
		rm -rf $(stagingFolder) || die "problem removing staging folder: $(stagingFolder)"
	fi
}

userProfile()
{
	cygpath $USERPROFILE
}

packageFolder()
{
	SIMPLE_NAME=$1
	FOLDER_NAME=$2
	echo "packaging up folder: $FOLDER_NAME"
	pushd $FOLDER_NAME
	tar --absolute-names -zcf $(stagingFolder)/$SIMPLE_NAME.tar.gz * || die "problem packaging as tar: $FOLDER_NAME"
	popd
}

exportRegistryKey()
{
	SIMPLE_NAME=$1
	REGISTRY_KEY_NAME=$2
	echo "exporting registry key: $REGISTRY_KEY_NAME"
	regedit /e $(cygpath --windows $(stagingFolder)/$SIMPLE_NAME.reg) $REGISTRY_KEY_NAME
}
